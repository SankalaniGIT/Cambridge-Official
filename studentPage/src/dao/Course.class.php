<?php
/**
 *  This is auto generated by PHP5 Tools based on the Database Schema.
 *  Author : MahiShimi PHP5 Tools version 1.1
 *  Project : Cambridge
 *  Last Updated : Wed 06th Feb,2013 01:38 pm
 *  Table Name : courses
 *  Modifier : This Db tool is currently modified by Maheshwaran Varghese on 10th August 2011
 */

class Course
{
	public $id;
	public $course_name;
	public $code;
	public $section_name;
	public $is_deleted;
	public $created_at;
	public $updated_at;
	public $max_order_no;

	//===int(11)===//
	public function getId(){return $this->id;}
	public function setId($id){$this->id= $id;}

	//===varchar(255)===//
	public function getCourse_name(){return $this->course_name;}
	public function setCourse_name($course_name){$this->course_name= $course_name;}

	//===varchar(255)===//
	public function getCode(){return $this->code;}
	public function setCode($code){$this->code= $code;}

	//===varchar(255)===//
	public function getSection_name(){return $this->section_name;}
	public function setSection_name($section_name){$this->section_name= $section_name;}

	//===tinyint(1)===//
	public function getIs_deleted(){return $this->is_deleted;}
	public function setIs_deleted($is_deleted){$this->is_deleted= $is_deleted;}

	//===datetime===//
	public function getCreated_at(){return $this->created_at;}
	public function setCreated_at($created_at){$this->created_at= $created_at;}

	//===datetime===//
	public function getUpdated_at(){return $this->updated_at;}
	public function setUpdated_at($updated_at){$this->updated_at= $updated_at;}

	//=== max_order_no ===//
	public function getMax_order_no(){return $this->max_order_no;}
	public function setMax_order_no($max_order_no){$this->max_order_no= $max_order_no;}

}


// Implement class of Course
class CourseDaoImpl
{
	private $db = null ;

	function __construct() {
		$this->db=new DBConnection();
	}

	/** SAVE THE Course OBJECT INTO courses */
	function saveCourse($course) {
		$courseIn=new Course();
		$courseIn=$course;

		$SQL= sprintf("INSERT INTO courses(course_name,code,section_name,is_deleted,created_at,updated_at) VALUES('%s','%s','%s',%d,'%s','%s')",
		mysql_real_escape_string($courseIn->getCourse_name()),mysql_real_escape_string($courseIn->getCode()),mysql_real_escape_string($courseIn->getSection_name()),mysql_real_escape_string($courseIn->getIs_deleted()),mysql_real_escape_string($courseIn->getCreated_at()),mysql_real_escape_string($courseIn->getUpdated_at()));

		$this->db->executeQuery($SQL);

	}


	/** UPDATE THE TABLE courses */
	function updateCourse($course) {
		$courseIn=new Course();
		$courseIn=$course;

		$SQL= sprintf("UPDATE courses SET course_name='%s',code='%s',section_name='%s',is_deleted=%d,created_at='%s',updated_at='%s' WHERE id=%d ",
		mysql_real_escape_string($courseIn->getCourse_name()),mysql_real_escape_string($courseIn->getCode()),mysql_real_escape_string($courseIn->getSection_name()),mysql_real_escape_string($courseIn->getIs_deleted()),mysql_real_escape_string($courseIn->getCreated_at()),mysql_real_escape_string($courseIn->getUpdated_at()),$courseIn->getId());

		$this->db->executeQuery($SQL);

	}

	/** GET ALL DATA FROM THE TABLE courses */
	function getAllCourse() {
		$SQL="SELECT * FROM courses";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY STATUS FROM THE TABLE courses */
	function getAllCourseByStatus() {
		$SQL="SELECT * FROM courses WHERE status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY ID DESC FROM THE TABLE courses */
	function getAllCourseByIdDesc() {
		$SQL="SELECT * FROM courses ORDER BY id DESC";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ONE DATA BY ID FROM THE TABLE courses */
	function getOneCourseById($id) {
		$SQL="SELECT * FROM courses WHERE id = '$id'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA BY ID, STATUS FROM THE TABLE courses */
	function getAllCourseById_Status($id) {
		$SQL="SELECT * FROM courses WHERE id = '$id' AND status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET LAST RECORD FROM THE TABLE courses */
	function getLastRec($field) {
		$SQL="SELECT * FROM courses ORDER BY $field DESC LIMIT 1";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA ORDER BY ORDER_NO, STATUS FROM THE TABLE courses */
	function getAllCourse_By_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM courses WHERE status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET DATA BY ID, STATUS ORDER BY ORDER_NO FROM THE TABLE courses */
	function getCourse_By_Id_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM courses WHERE id = '$id' AND status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA MAXIMUM ORDER NO FROM THE TABLE courses */
	function getLastOrderNo() {
		$SQL="SELECT MAX(CAST(order_no AS DECIMAL)) AS max_order_no FROM courses";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$course->setMax_order_no($rs['max_order_no']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	function getCourseById_Is_deleted($id) {
		$SQL="SELECT * FROM courses WHERE id = '$id' AND is_deleted = '0'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$course = new Course();
			$course->setId($rs['id']);
			$course->setCourse_name($rs['course_name']);
			$course->setCode($rs['code']);
			$course->setSection_name($rs['section_name']);
			$course->setIs_deleted($rs['is_deleted']);
			$course->setCreated_at($rs['created_at']);
			$course->setUpdated_at($rs['updated_at']);
			$result[$count++] = $course;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}


	/** DELETE VALUE BY ID FROM THE TABLE courses */
	function deleteCourseById($id) {
		$SQL="DELETE FROM courses WHERE id='$id'";
		$this->db->executeQuery($SQL);

	}
	function __destruct() {
		$this->db->close();
	}

}
?>