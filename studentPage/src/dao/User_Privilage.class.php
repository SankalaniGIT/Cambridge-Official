<?php
/**
 *  This is auto generated by PHP5 Tools based on the Database Schema.
 *  Author : MahiShimi PHP5 Tools version 1.1
 *  Project : R&G
 *  Last Updated : Fri 27th Jan,2012 05:47 am
 *  Table Name : user_privilage_tab
 *  Modifier : This Db tool is currently modified by Maheshwaran Varghese on 10th August 2011
 */

class User_Privilage
{
	public $id;
	public $order_no;
	public $code;
	public $user_id;
	public $privilage_id;
	public $is_view;
	public $is_save;
	public $is_edit;
	public $is_delete;
	public $data_date;
	public $status;
	public $date_;
	public $max_order_no;

	//===bigint(20) unsigned===//
	public function getId(){return $this->id;}
	public function setId($id){$this->id= $id;}

	//===int(10) unsigned===//
	public function getOrder_no(){return $this->order_no;}
	public function setOrder_no($order_no){$this->order_no= $order_no;}

	//===varchar(45)===//
	public function getCode(){return $this->code;}
	public function setCode($code){$this->code= $code;}

	//===varchar(45)===//
	public function getUser_id(){return $this->user_id;}
	public function setUser_id($user_id){$this->user_id= $user_id;}

	//===varchar(45)===//
	public function getPrivilage_id(){return $this->privilage_id;}
	public function setPrivilage_id($privilage_id){$this->privilage_id= $privilage_id;}

	//===varchar(45)===//
	public function getIs_view(){return $this->is_view;}
	public function setIs_view($is_view){$this->is_view= $is_view;}

	//===varchar(45)===//
	public function getIs_save(){return $this->is_save;}
	public function setIs_save($is_save){$this->is_save= $is_save;}

	//===varchar(45)===//
	public function getIs_edit(){return $this->is_edit;}
	public function setIs_edit($is_edit){$this->is_edit= $is_edit;}

	//===varchar(45)===//
	public function getIs_delete(){return $this->is_delete;}
	public function setIs_delete($is_delete){$this->is_delete= $is_delete;}

	//===varchar(45)===//
	public function getData_date(){return $this->data_date;}
	public function setData_date($data_date){$this->data_date= $data_date;}

	//===varchar(45)===//
	public function getStatus(){return $this->status;}
	public function setStatus($status){$this->status= $status;}

	//===timestamp===//
	public function getDate_(){return $this->date_;}
	public function setDate_($date_){$this->date_= $date_;}

	//=== max_order_no ===//
	public function getMax_order_no(){return $this->max_order_no;}
	public function setMax_order_no($max_order_no){$this->max_order_no= $max_order_no;}

}


// Implement class of User_Privilage
class User_PrivilageDaoImpl
{
	private $db = null ;

	function __construct() {
		$this->db=new DBConnection();
	}

	/** SAVE THE User_Privilage OBJECT INTO user_privilage_tab */
	function saveUser_Privilage($user_privilage) {
		$user_privilageIn=new User_Privilage();
		$user_privilageIn=$user_privilage;

		$SQL= sprintf("INSERT INTO user_privilage_tab(order_no,code,user_id,privilage_id,is_view,is_save,is_edit,is_delete,data_date,status,date_) VALUES(%d,'%s','%s','%s','%s','%s','%s','%s','%s','%s','%s')",
		mysql_real_escape_string($user_privilageIn->getOrder_no()),mysql_real_escape_string($user_privilageIn->getCode()),mysql_real_escape_string($user_privilageIn->getUser_id()),mysql_real_escape_string($user_privilageIn->getPrivilage_id()),mysql_real_escape_string($user_privilageIn->getIs_view()),mysql_real_escape_string($user_privilageIn->getIs_save()),mysql_real_escape_string($user_privilageIn->getIs_edit()),mysql_real_escape_string($user_privilageIn->getIs_delete()),mysql_real_escape_string($user_privilageIn->getData_date()),mysql_real_escape_string($user_privilageIn->getStatus()),mysql_real_escape_string($user_privilageIn->getDate_()));

		$this->db->executeQuery($SQL);

	}


	/** UPDATE THE TABLE user_privilage_tab */
	function updateUser_Privilage($user_privilage) {
		$user_privilageIn=new User_Privilage();
		$user_privilageIn=$user_privilage;

		$SQL= sprintf("UPDATE user_privilage_tab SET order_no=%d,code='%s',user_id='%s',privilage_id='%s',is_view='%s',is_save='%s',is_edit='%s',is_delete='%s',data_date='%s',status='%s',date_='%s' WHERE id=%d ",
		mysql_real_escape_string($user_privilageIn->getOrder_no()),mysql_real_escape_string($user_privilageIn->getCode()),mysql_real_escape_string($user_privilageIn->getUser_id()),mysql_real_escape_string($user_privilageIn->getPrivilage_id()),mysql_real_escape_string($user_privilageIn->getIs_view()),mysql_real_escape_string($user_privilageIn->getIs_save()),mysql_real_escape_string($user_privilageIn->getIs_edit()),mysql_real_escape_string($user_privilageIn->getIs_delete()),mysql_real_escape_string($user_privilageIn->getData_date()),mysql_real_escape_string($user_privilageIn->getStatus()),mysql_real_escape_string($user_privilageIn->getDate_()),$user_privilageIn->getId());

		$this->db->executeQuery($SQL);

	}

	/** GET ALL DATA FROM THE TABLE user_privilage_tab */
	function getAllUser_Privilage() {
		$SQL="SELECT * FROM user_privilage_tab";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY STATUS FROM THE TABLE user_privilage_tab */
	function getAllUser_PrivilageByStatus() {
		$SQL="SELECT * FROM user_privilage_tab WHERE status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY ID DESC FROM THE TABLE user_privilage_tab */
	function getAllUser_PrivilageByIdDesc() {
		$SQL="SELECT * FROM user_privilage_tab ORDER BY id DESC";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ONE DATA BY ID FROM THE TABLE user_privilage_tab */
	function getOneUser_PrivilageById($id) {
		$SQL="SELECT * FROM user_privilage_tab WHERE id = '$id'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA BY ID, STATUS FROM THE TABLE user_privilage_tab */
	function getAllUser_PrivilageById_Status($id) {
		$SQL="SELECT * FROM user_privilage_tab WHERE id = '$id' AND status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET LAST RECORD FROM THE TABLE user_privilage_tab */
	function getLastRec($field) {
		$SQL="SELECT * FROM user_privilage_tab ORDER BY $field DESC LIMIT 1";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA ORDER BY ORDER_NO, STATUS FROM THE TABLE user_privilage_tab */
	function getAllUser_Privilage_By_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM user_privilage_tab WHERE status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET DATA BY ID, STATUS ORDER BY ORDER_NO FROM THE TABLE user_privilage_tab */
	function getUser_Privilage_By_Id_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM user_privilage_tab WHERE id = '$id' AND status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA MAXIMUM ORDER NO FROM THE TABLE user_privilage_tab */
	function getLastOrderNo() {
		$SQL="SELECT MAX(CAST(order_no AS DECIMAL)) AS max_order_no FROM user_privilage_tab";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$user_privilage->setMax_order_no($rs['max_order_no']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	function getAllUser_Privilage_By_User_id($user_id) {
		$SQL="SELECT * FROM user_privilage_tab WHERE user_id = '$user_id' AND status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result;
		}else{
			return null;
		}
	}

	//
	function getUser_Privilage_By_User_id_Privilage_id($user_id,$privilage_id) {
		$SQL="SELECT * FROM user_privilage_tab WHERE user_id = '$user_id' AND privilage_id = '$privilage_id' AND status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$user_privilage = new User_Privilage();
			$user_privilage->setId($rs['id']);
			$user_privilage->setOrder_no($rs['order_no']);
			$user_privilage->setCode($rs['code']);
			$user_privilage->setUser_id($rs['user_id']);
			$user_privilage->setPrivilage_id($rs['privilage_id']);
			$user_privilage->setIs_view($rs['is_view']);
			$user_privilage->setIs_save($rs['is_save']);
			$user_privilage->setIs_edit($rs['is_edit']);
			$user_privilage->setIs_delete($rs['is_delete']);
			$user_privilage->setData_date($rs['data_date']);
			$user_privilage->setStatus($rs['status']);
			$user_privilage->setDate_($rs['date_']);
			$result[$count++] = $user_privilage;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** DELETE VALUE BY ID FROM THE TABLE user_privilage_tab */
	function deleteUser_PrivilageById($id) {
		$SQL="DELETE FROM user_privilage_tab WHERE id='$id'";
		$this->db->executeQuery($SQL);

	}
	function __destruct() {
		$this->db->close();
	}

}
?>