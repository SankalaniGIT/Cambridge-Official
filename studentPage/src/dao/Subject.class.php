<?php
/**
 *  This is auto generated by PHP5 Tools based on the Database Schema.
 *  Author : MahiShimi PHP5 Tools version 1.1
 *  Project : Cambridge
 *  Last Updated : Fri 08th Feb,2013 05:27 am
 *  Table Name : subjects
 *  Modifier : This Db tool is currently modified by Maheshwaran Varghese on 10th August 2011
 */

class Subject
{
	public $id;
	public $name;
	public $code;
	public $batch_id;
	public $no_exams;
	public $max_weekly_classes;
	public $elective_group_id;
	public $is_deleted;
	public $created_at;
	public $updated_at;
	public $max_order_no;

	//===int(11)===//
	public function getId(){return $this->id;}
	public function setId($id){$this->id= $id;}

	//===varchar(255)===//
	public function getName(){return $this->name;}
	public function setName($name){$this->name= $name;}

	//===varchar(255)===//
	public function getCode(){return $this->code;}
	public function setCode($code){$this->code= $code;}

	//===int(11)===//
	public function getBatch_id(){return $this->batch_id;}
	public function setBatch_id($batch_id){$this->batch_id= $batch_id;}

	//===tinyint(1)===//
	public function getNo_exams(){return $this->no_exams;}
	public function setNo_exams($no_exams){$this->no_exams= $no_exams;}

	//===int(11)===//
	public function getMax_weekly_classes(){return $this->max_weekly_classes;}
	public function setMax_weekly_classes($max_weekly_classes){$this->max_weekly_classes= $max_weekly_classes;}

	//===int(11)===//
	public function getElective_group_id(){return $this->elective_group_id;}
	public function setElective_group_id($elective_group_id){$this->elective_group_id= $elective_group_id;}

	//===tinyint(1)===//
	public function getIs_deleted(){return $this->is_deleted;}
	public function setIs_deleted($is_deleted){$this->is_deleted= $is_deleted;}

	//===datetime===//
	public function getCreated_at(){return $this->created_at;}
	public function setCreated_at($created_at){$this->created_at= $created_at;}

	//===datetime===//
	public function getUpdated_at(){return $this->updated_at;}
	public function setUpdated_at($updated_at){$this->updated_at= $updated_at;}

	//=== max_order_no ===//
	public function getMax_order_no(){return $this->max_order_no;}
	public function setMax_order_no($max_order_no){$this->max_order_no= $max_order_no;}

}


// Implement class of Subject
class SubjectDaoImpl
{
	private $db = null ;

	function __construct() {
		$this->db=new DBConnection();
	}

	/** SAVE THE Subject OBJECT INTO subjects */
	function saveSubject($subject) {
		$subjectIn=new Subject();
		$subjectIn=$subject;

		$SQL= sprintf("INSERT INTO subjects(name,code,batch_id,no_exams,max_weekly_classes,elective_group_id,is_deleted,created_at,updated_at) VALUES('%s','%s',%d,%d,%d,%d,%d,'%s','%s')",
		mysql_real_escape_string($subjectIn->getName()),mysql_real_escape_string($subjectIn->getCode()),mysql_real_escape_string($subjectIn->getBatch_id()),mysql_real_escape_string($subjectIn->getNo_exams()),mysql_real_escape_string($subjectIn->getMax_weekly_classes()),mysql_real_escape_string($subjectIn->getElective_group_id()),mysql_real_escape_string($subjectIn->getIs_deleted()),mysql_real_escape_string($subjectIn->getCreated_at()),mysql_real_escape_string($subjectIn->getUpdated_at()));

		$this->db->executeQuery($SQL);

	}


	/** UPDATE THE TABLE subjects */
	function updateSubject($subject) {
		$subjectIn=new Subject();
		$subjectIn=$subject;

		$SQL= sprintf("UPDATE subjects SET name='%s',code='%s',batch_id=%d,no_exams=%d,max_weekly_classes=%d,elective_group_id=%d,is_deleted=%d,created_at='%s',updated_at='%s' WHERE id=%d ",
		mysql_real_escape_string($subjectIn->getName()),mysql_real_escape_string($subjectIn->getCode()),mysql_real_escape_string($subjectIn->getBatch_id()),mysql_real_escape_string($subjectIn->getNo_exams()),mysql_real_escape_string($subjectIn->getMax_weekly_classes()),mysql_real_escape_string($subjectIn->getElective_group_id()),mysql_real_escape_string($subjectIn->getIs_deleted()),mysql_real_escape_string($subjectIn->getCreated_at()),mysql_real_escape_string($subjectIn->getUpdated_at()),$subjectIn->getId());

		$this->db->executeQuery($SQL);

	}

	/** GET ALL DATA FROM THE TABLE subjects */
	function getAllSubject() {
		$SQL="SELECT * FROM subjects";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY STATUS FROM THE TABLE subjects */
	function getAllSubjectByStatus() {
		$SQL="SELECT * FROM subjects WHERE status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ALL DATA BY ID DESC FROM THE TABLE subjects */
	function getAllSubjectByIdDesc() {
		$SQL="SELECT * FROM subjects ORDER BY id DESC";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET ONE DATA BY ID FROM THE TABLE subjects */
	function getOneSubjectById($id) {
		$SQL="SELECT * FROM subjects WHERE id = '$id'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA BY ID, STATUS FROM THE TABLE subjects */
	function getAllSubjectById_Status($id) {
		$SQL="SELECT * FROM subjects WHERE id = '$id' AND status = 'Yes'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET LAST RECORD FROM THE TABLE subjects */
	function getLastRec($field) {
		$SQL="SELECT * FROM subjects ORDER BY $field DESC LIMIT 1";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA ORDER BY ORDER_NO, STATUS FROM THE TABLE subjects */
	function getAllSubject_By_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM subjects WHERE status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		return $result;

	}

	/** GET DATA BY ID, STATUS ORDER BY ORDER_NO FROM THE TABLE subjects */
	function getSubject_By_Id_Status_ORDER_BY_Order_no() {
		$SQL="SELECT * FROM subjects WHERE id = '$id' AND status = 'Yes' ORDER BY CAST(order_no AS DECIMAL)";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	/** GET DATA MAXIMUM ORDER NO FROM THE TABLE subjects */
	function getLastOrderNo() {
		$SQL="SELECT MAX(CAST(order_no AS DECIMAL)) AS max_order_no FROM subjects";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$subject->setMax_order_no($rs['max_order_no']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	function getSubjectById_Is_deleted($id) {
		$SQL="SELECT * FROM subjects WHERE id ='$id' AND is_deleted = '0'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result[0];
		}else{
			return null;
		}
	}

	function getSubject_By_Batch_id($batch_id) {
		$SQL="SELECT * FROM subjects WHERE batch_id ='$batch_id' AND is_deleted = '0'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result;
		}else{
			return null;
		}
	}

	function getUnique_SubjectName_By_Batch_id($batch_id) {
		$SQL="SELECT DISTINCT * FROM subjects WHERE batch_id ='$batch_id' AND is_deleted = '0'";
		$this->db->executeQuery($SQL);

		$result = array();
		$count = 0;

		while($rs = $this->db->nextRecord())
		{
			$subject = new Subject();
			$subject->setId($rs['id']);
			$subject->setName($rs['name']);
			$subject->setCode($rs['code']);
			$subject->setBatch_id($rs['batch_id']);
			$subject->setNo_exams($rs['no_exams']);
			$subject->setMax_weekly_classes($rs['max_weekly_classes']);
			$subject->setElective_group_id($rs['elective_group_id']);
			$subject->setIs_deleted($rs['is_deleted']);
			$subject->setCreated_at($rs['created_at']);
			$subject->setUpdated_at($rs['updated_at']);
			$result[$count++] = $subject;
		}

		$this->db->closeRs();
		if(count($result) > 0 ){
			return $result;
		}else{
			return null;
		}
	}

	/** DELETE VALUE BY ID FROM THE TABLE subjects */
	function deleteSubjectById($id) {
		$SQL="DELETE FROM subjects WHERE id='$id'";
		$this->db->executeQuery($SQL);

	}
	function __destruct() {
		$this->db->close();
	}

}
?>